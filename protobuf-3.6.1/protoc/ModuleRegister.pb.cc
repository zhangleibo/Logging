// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ModuleRegister.proto

#include "ModuleRegister.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ModuleRegister_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ModuleRegister_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_module_register_reply;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ModuleRegister_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_module_register_req;
}  // namespace protobuf_ModuleRegister_2eproto
namespace CMSGProto {
class module_register_reqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<module_register_req>
      _instance;
} _module_register_req_default_instance_;
class module_register_replyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<module_register_reply>
      _instance;
} _module_register_reply_default_instance_;
class multi_module_register_reqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<multi_module_register_req>
      _instance;
} _multi_module_register_req_default_instance_;
class multi_module_register_replyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<multi_module_register_reply>
      _instance;
} _multi_module_register_reply_default_instance_;
}  // namespace CMSGProto
namespace protobuf_ModuleRegister_2eproto {
static void InitDefaultsmodule_register_req() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CMSGProto::_module_register_req_default_instance_;
    new (ptr) ::CMSGProto::module_register_req();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMSGProto::module_register_req::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_module_register_req =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmodule_register_req}, {}};

static void InitDefaultsmodule_register_reply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CMSGProto::_module_register_reply_default_instance_;
    new (ptr) ::CMSGProto::module_register_reply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMSGProto::module_register_reply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_module_register_reply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmodule_register_reply}, {}};

static void InitDefaultsmulti_module_register_req() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CMSGProto::_multi_module_register_req_default_instance_;
    new (ptr) ::CMSGProto::multi_module_register_req();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMSGProto::multi_module_register_req::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_multi_module_register_req =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsmulti_module_register_req}, {
      &protobuf_ModuleRegister_2eproto::scc_info_module_register_req.base,}};

static void InitDefaultsmulti_module_register_reply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CMSGProto::_multi_module_register_reply_default_instance_;
    new (ptr) ::CMSGProto::multi_module_register_reply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMSGProto::multi_module_register_reply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_multi_module_register_reply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsmulti_module_register_reply}, {
      &protobuf_ModuleRegister_2eproto::scc_info_module_register_reply.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_module_register_req.base);
  ::google::protobuf::internal::InitSCC(&scc_info_module_register_reply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_multi_module_register_req.base);
  ::google::protobuf::internal::InitSCC(&scc_info_multi_module_register_reply.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSGProto::module_register_req, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSGProto::module_register_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSGProto::module_register_req, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSGProto::module_register_req, name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSGProto::module_register_reply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSGProto::module_register_reply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSGProto::module_register_reply, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSGProto::module_register_reply, name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSGProto::multi_module_register_req, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSGProto::multi_module_register_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSGProto::multi_module_register_req, module_info_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSGProto::multi_module_register_reply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSGProto::multi_module_register_reply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMSGProto::multi_module_register_reply, module_info_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::CMSGProto::module_register_req)},
  { 9, 16, sizeof(::CMSGProto::module_register_reply)},
  { 18, 24, sizeof(::CMSGProto::multi_module_register_req)},
  { 25, 31, sizeof(::CMSGProto::multi_module_register_reply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::CMSGProto::_module_register_req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CMSGProto::_module_register_reply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CMSGProto::_multi_module_register_req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CMSGProto::_multi_module_register_reply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ModuleRegister.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024ModuleRegister.proto\022\tCMSGProto\"/\n\023mod"
      "ule_register_req\022\n\n\002id\030\001 \002(\005\022\014\n\004name\030\002 \002"
      "(\t\"1\n\025module_register_reply\022\n\n\002id\030\001 \002(\005\022"
      "\014\n\004name\030\002 \002(\t\"P\n\031multi_module_register_r"
      "eq\0223\n\013module_info\030\001 \003(\0132\036.CMSGProto.modu"
      "le_register_req\"T\n\033multi_module_register"
      "_reply\0225\n\013module_info\030\001 \003(\0132 .CMSGProto."
      "module_register_reply"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 301);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ModuleRegister.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ModuleRegister_2eproto
namespace CMSGProto {

// ===================================================================

void module_register_req::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int module_register_req::kIdFieldNumber;
const int module_register_req::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

module_register_req::module_register_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ModuleRegister_2eproto::scc_info_module_register_req.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMSGProto.module_register_req)
}
module_register_req::module_register_req(const module_register_req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:CMSGProto.module_register_req)
}

void module_register_req::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

module_register_req::~module_register_req() {
  // @@protoc_insertion_point(destructor:CMSGProto.module_register_req)
  SharedDtor();
}

void module_register_req::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void module_register_req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* module_register_req::descriptor() {
  ::protobuf_ModuleRegister_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ModuleRegister_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const module_register_req& module_register_req::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ModuleRegister_2eproto::scc_info_module_register_req.base);
  return *internal_default_instance();
}


void module_register_req::Clear() {
// @@protoc_insertion_point(message_clear_start:CMSGProto.module_register_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool module_register_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMSGProto.module_register_req)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMSGProto.module_register_req.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMSGProto.module_register_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMSGProto.module_register_req)
  return false;
#undef DO_
}

void module_register_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMSGProto.module_register_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMSGProto.module_register_req.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMSGProto.module_register_req)
}

::google::protobuf::uint8* module_register_req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMSGProto.module_register_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMSGProto.module_register_req.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMSGProto.module_register_req)
  return target;
}

size_t module_register_req::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMSGProto.module_register_req)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t module_register_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMSGProto.module_register_req)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void module_register_req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMSGProto.module_register_req)
  GOOGLE_DCHECK_NE(&from, this);
  const module_register_req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const module_register_req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMSGProto.module_register_req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMSGProto.module_register_req)
    MergeFrom(*source);
  }
}

void module_register_req::MergeFrom(const module_register_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMSGProto.module_register_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void module_register_req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMSGProto.module_register_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void module_register_req::CopyFrom(const module_register_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMSGProto.module_register_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool module_register_req::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void module_register_req::Swap(module_register_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void module_register_req::InternalSwap(module_register_req* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata module_register_req::GetMetadata() const {
  protobuf_ModuleRegister_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ModuleRegister_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void module_register_reply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int module_register_reply::kIdFieldNumber;
const int module_register_reply::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

module_register_reply::module_register_reply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ModuleRegister_2eproto::scc_info_module_register_reply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMSGProto.module_register_reply)
}
module_register_reply::module_register_reply(const module_register_reply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:CMSGProto.module_register_reply)
}

void module_register_reply::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

module_register_reply::~module_register_reply() {
  // @@protoc_insertion_point(destructor:CMSGProto.module_register_reply)
  SharedDtor();
}

void module_register_reply::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void module_register_reply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* module_register_reply::descriptor() {
  ::protobuf_ModuleRegister_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ModuleRegister_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const module_register_reply& module_register_reply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ModuleRegister_2eproto::scc_info_module_register_reply.base);
  return *internal_default_instance();
}


void module_register_reply::Clear() {
// @@protoc_insertion_point(message_clear_start:CMSGProto.module_register_reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool module_register_reply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMSGProto.module_register_reply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMSGProto.module_register_reply.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMSGProto.module_register_reply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMSGProto.module_register_reply)
  return false;
#undef DO_
}

void module_register_reply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMSGProto.module_register_reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMSGProto.module_register_reply.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMSGProto.module_register_reply)
}

::google::protobuf::uint8* module_register_reply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMSGProto.module_register_reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMSGProto.module_register_reply.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMSGProto.module_register_reply)
  return target;
}

size_t module_register_reply::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMSGProto.module_register_reply)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t module_register_reply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMSGProto.module_register_reply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void module_register_reply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMSGProto.module_register_reply)
  GOOGLE_DCHECK_NE(&from, this);
  const module_register_reply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const module_register_reply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMSGProto.module_register_reply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMSGProto.module_register_reply)
    MergeFrom(*source);
  }
}

void module_register_reply::MergeFrom(const module_register_reply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMSGProto.module_register_reply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void module_register_reply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMSGProto.module_register_reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void module_register_reply::CopyFrom(const module_register_reply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMSGProto.module_register_reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool module_register_reply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void module_register_reply::Swap(module_register_reply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void module_register_reply::InternalSwap(module_register_reply* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata module_register_reply::GetMetadata() const {
  protobuf_ModuleRegister_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ModuleRegister_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void multi_module_register_req::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int multi_module_register_req::kModuleInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

multi_module_register_req::multi_module_register_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ModuleRegister_2eproto::scc_info_multi_module_register_req.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMSGProto.multi_module_register_req)
}
multi_module_register_req::multi_module_register_req(const multi_module_register_req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      module_info_(from.module_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMSGProto.multi_module_register_req)
}

void multi_module_register_req::SharedCtor() {
}

multi_module_register_req::~multi_module_register_req() {
  // @@protoc_insertion_point(destructor:CMSGProto.multi_module_register_req)
  SharedDtor();
}

void multi_module_register_req::SharedDtor() {
}

void multi_module_register_req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* multi_module_register_req::descriptor() {
  ::protobuf_ModuleRegister_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ModuleRegister_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const multi_module_register_req& multi_module_register_req::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ModuleRegister_2eproto::scc_info_multi_module_register_req.base);
  return *internal_default_instance();
}


void multi_module_register_req::Clear() {
// @@protoc_insertion_point(message_clear_start:CMSGProto.multi_module_register_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_info_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool multi_module_register_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMSGProto.multi_module_register_req)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMSGProto.module_register_req module_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_module_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMSGProto.multi_module_register_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMSGProto.multi_module_register_req)
  return false;
#undef DO_
}

void multi_module_register_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMSGProto.multi_module_register_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMSGProto.module_register_req module_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->module_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->module_info(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMSGProto.multi_module_register_req)
}

::google::protobuf::uint8* multi_module_register_req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMSGProto.multi_module_register_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMSGProto.module_register_req module_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->module_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->module_info(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMSGProto.multi_module_register_req)
  return target;
}

size_t multi_module_register_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMSGProto.multi_module_register_req)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMSGProto.module_register_req module_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->module_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->module_info(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void multi_module_register_req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMSGProto.multi_module_register_req)
  GOOGLE_DCHECK_NE(&from, this);
  const multi_module_register_req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const multi_module_register_req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMSGProto.multi_module_register_req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMSGProto.multi_module_register_req)
    MergeFrom(*source);
  }
}

void multi_module_register_req::MergeFrom(const multi_module_register_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMSGProto.multi_module_register_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  module_info_.MergeFrom(from.module_info_);
}

void multi_module_register_req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMSGProto.multi_module_register_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void multi_module_register_req::CopyFrom(const multi_module_register_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMSGProto.multi_module_register_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool multi_module_register_req::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->module_info())) return false;
  return true;
}

void multi_module_register_req::Swap(multi_module_register_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void multi_module_register_req::InternalSwap(multi_module_register_req* other) {
  using std::swap;
  CastToBase(&module_info_)->InternalSwap(CastToBase(&other->module_info_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata multi_module_register_req::GetMetadata() const {
  protobuf_ModuleRegister_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ModuleRegister_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void multi_module_register_reply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int multi_module_register_reply::kModuleInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

multi_module_register_reply::multi_module_register_reply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ModuleRegister_2eproto::scc_info_multi_module_register_reply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMSGProto.multi_module_register_reply)
}
multi_module_register_reply::multi_module_register_reply(const multi_module_register_reply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      module_info_(from.module_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMSGProto.multi_module_register_reply)
}

void multi_module_register_reply::SharedCtor() {
}

multi_module_register_reply::~multi_module_register_reply() {
  // @@protoc_insertion_point(destructor:CMSGProto.multi_module_register_reply)
  SharedDtor();
}

void multi_module_register_reply::SharedDtor() {
}

void multi_module_register_reply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* multi_module_register_reply::descriptor() {
  ::protobuf_ModuleRegister_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ModuleRegister_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const multi_module_register_reply& multi_module_register_reply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ModuleRegister_2eproto::scc_info_multi_module_register_reply.base);
  return *internal_default_instance();
}


void multi_module_register_reply::Clear() {
// @@protoc_insertion_point(message_clear_start:CMSGProto.multi_module_register_reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_info_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool multi_module_register_reply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMSGProto.multi_module_register_reply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMSGProto.module_register_reply module_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_module_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMSGProto.multi_module_register_reply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMSGProto.multi_module_register_reply)
  return false;
#undef DO_
}

void multi_module_register_reply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMSGProto.multi_module_register_reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMSGProto.module_register_reply module_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->module_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->module_info(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMSGProto.multi_module_register_reply)
}

::google::protobuf::uint8* multi_module_register_reply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMSGProto.multi_module_register_reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMSGProto.module_register_reply module_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->module_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->module_info(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMSGProto.multi_module_register_reply)
  return target;
}

size_t multi_module_register_reply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMSGProto.multi_module_register_reply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMSGProto.module_register_reply module_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->module_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->module_info(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void multi_module_register_reply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMSGProto.multi_module_register_reply)
  GOOGLE_DCHECK_NE(&from, this);
  const multi_module_register_reply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const multi_module_register_reply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMSGProto.multi_module_register_reply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMSGProto.multi_module_register_reply)
    MergeFrom(*source);
  }
}

void multi_module_register_reply::MergeFrom(const multi_module_register_reply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMSGProto.multi_module_register_reply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  module_info_.MergeFrom(from.module_info_);
}

void multi_module_register_reply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMSGProto.multi_module_register_reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void multi_module_register_reply::CopyFrom(const multi_module_register_reply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMSGProto.multi_module_register_reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool multi_module_register_reply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->module_info())) return false;
  return true;
}

void multi_module_register_reply::Swap(multi_module_register_reply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void multi_module_register_reply::InternalSwap(multi_module_register_reply* other) {
  using std::swap;
  CastToBase(&module_info_)->InternalSwap(CastToBase(&other->module_info_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata multi_module_register_reply::GetMetadata() const {
  protobuf_ModuleRegister_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ModuleRegister_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CMSGProto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMSGProto::module_register_req* Arena::CreateMaybeMessage< ::CMSGProto::module_register_req >(Arena* arena) {
  return Arena::CreateInternal< ::CMSGProto::module_register_req >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMSGProto::module_register_reply* Arena::CreateMaybeMessage< ::CMSGProto::module_register_reply >(Arena* arena) {
  return Arena::CreateInternal< ::CMSGProto::module_register_reply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMSGProto::multi_module_register_req* Arena::CreateMaybeMessage< ::CMSGProto::multi_module_register_req >(Arena* arena) {
  return Arena::CreateInternal< ::CMSGProto::multi_module_register_req >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMSGProto::multi_module_register_reply* Arena::CreateMaybeMessage< ::CMSGProto::multi_module_register_reply >(Arena* arena) {
  return Arena::CreateInternal< ::CMSGProto::multi_module_register_reply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
